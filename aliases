#!/usr/bin/env bash

# add following lines to ~/.bashrc:
# if [ -f ~/bin/aliases ]; then
#     . ~/bin/aliases
# fi

# Autocompletion
if [ -f ~/bin/.autocomplete.sh ]; then
    . ~/bin/.autocomplete.sh
fi

PATH=$PATH:~/bin

export NUC=marand@marand.dk
export WEB=/var/www/html

#set -o vi
#bind -m vi-insert "\C-l":clear-screen

alias ll='ls -alF'
alias la='ls -A'
alias lt='ls -t'
alias l='ls -CF'
alias lf='ls -t | head -1'

alias mv='mv -i'
alias cp='cp -i'

alias pgrep='pgrep -f -l'
alias pkill='pkill -s 9 -f'
alias ps='ps aux'

alias ai='sudo apt-get install'
alias au='sudo apt-get update'
alias ag='sudo apt-get upgrade'
alias ar='sudo apt-get remove'
alias aar='sudo apt-get autoremove'
al () {
    apt list "*$1*"
}
ali () {
    apt list --installed "*$1*"
}
alias ase='apt search'
alias ash='apt show' # apt show pckgname - shows information about a package
alias av='apt-cache policy'

alias ni='npm install'
alias nrm='npm remove'
alias ns='npm start'
alias nr='npm run'
alias nre='npm run env'

alias df='df -Th'
alias writer='lowriter'
alias work='cd ~/work'
alias notes='cd ~/notes'
alias todo='vim ~/notes/todo.txt'

# platform specific stuff
if [[ "$(uname)" == "Darwin" ]]; then # It's a Mac!
    alias dl='cd ~/Downloads'
    alias desk='cd ~/Desktop'
    alias xc='pbcopy'
    alias xpaste='pbpaste'
    dl=~/Downloads
    desk=~/Desktop
elif [[ "$(uname)" == "MSYS_NT-10.0-18362" ]]; then # It's MSYS2!
    alias dl='cd /c/Users/$USER/Downloads'
    alias desk='cd /c/Users/$USER/Desktop'
    alias xc='clip'
    alias open='start'
    alias ln='echo "use cmd //c mklink"'
    dl=/c/Users/mar/Downloads
    desk=/c/Users/mar/Desktop
    #alias xpaste='pbpaste' #todo: windows paste
elif [[ "$(expr substr $(uname -s) 1 5)" == "Linux" ]]; then # It's Good ol' Linux!
    alias dl='cd ~/Downloads'
    alias desk='cd ~/Desktop'
    alias xc='xclip -selection c' # example: pwd | xc
    alias open='xdg-open'
    alias xpaste='xclip -selection clipboard -o'
    dl=~/Downloads
    desk=~/Desktop
fi

# misc stuff
alias cmux='sudo chmod u+x'
alias rsync='rsync -arvzP'
alias drivemount='google-drive-ocamlfuse' # first arg: mountdir
alias unmount='fusermount -u' # first arg: mountdir
alias rb='. ~/.bashrc'
alias rbc='. ~/.bashrc'
alias breset='. ~/.bashrc'
alias sourcebrc='. ~/.bashrc'
alias vact='. $(pwd)/venv/bin/activate'

wordcount () {
    echo $1 | wc --words -
}
trspace () {
    echo "$@" | tr " " "_"
}
arrayify () {
    echo "[$@]" | tr "\n" ", " # cut off last two chars at some point
}
trupper () {
    echo "$@" | tr '[:lower:]' '[:upper:]'
}
trlower () {
    echo "$@" | tr '[:upper:]' '[:lower:]'
}

trim() {
    #local var="$*"
    read var # from pipe
    # remove leading whitespace characters
    var="${var#"${var%%[![:space:]]*}"}"
    # remove trailing whitespace characters
    var="${var%"${var##*[![:space:]]}"}"
    echo -n "$var"
}


sgrep () {
    grep -irn "$1" .
}
greps () {
    grep -irn "$1" .
}

winpath () {
    if [ $# -eq 0 ]
    then
        temppath=$(realpath .)
    else
        temppath=$(realpath $1)
    fi

        # for windows sake
        if [ $(echo $temppath | cut -c1-2) == "/c" ]
        then
            temppath="C:${temppath:2}"
            temppath=$(echo $temppath | tr '/' '\\')
        fi

        echo $temppath | tr -d "\n"
    }

xp () {
    if [ $# -eq 0 ]
    then
        realpath . | tr -d "\n" | xc
    else
        realpath $1 | tr -d "\n" | xc
    fi
}


cac () {
    cat $1 | xc
}

alias linuxv='cat /etc/*-release'

#docker
alias dock-enter='docker exec -it todo bash'

#navigation aliases
alias ca='cd ..'
alias caa='cd ../..'
alias caaa='cd ../../..'
alias caaaa='cd ../../../..'
alias caaaaa='cd ../../../../..'
alias caaaaaa='cd ../../../../../..'
alias caaaaaaa='cd ../../../../../../..'
alias caaaaaaaa='cd ../../../../../../../..'
alias caaaaaaaaa='cd ../../../../../../../../..'
alias caaaaaaaaaa='cd ../../../../../../../../../..'
alias caaaaaaaaaaa='cd ../../../../../../../../../../..'
alias cb='cd -'

#alias cdf='cd $(ls -d ./*/ | head -1)' # enter first dir
#alias cdl='cd $(ls -dr ./*/ | head -1)' # enter last dir
alias cdl='cd $(ls -t | head -1)'

alias bin='cd ~/bin'
alias www='cd /var/www/html/'

#search aliases
findall () {
    find . -iname "*$1*"
}

fd () {
    find . -type d -iname "*$1*"
}
finddir () {
    find . -type d -iname "*$1*"
}

ff () {
    find . -type f -iname "*$1*"
    #rg --hidden --files -g "*$1*"
}
findfile () {
    find . -type f -iname "*$1*"
    #rg --hidden --files -g "*$1*"
}

findlib () {
    if [ $# -eq 0 ]
    then
        ldconfig -p
    else
        ldconfig -p | grep -i $1
    fi
}
# can also use locate PATTERN to find a file on the system (much faster)
findcore () { # search EVERYWHERE
    sudo find /bin /lib /lib64 /snap /usr /etc /opt /sbin /var /home -iname "*$1*"
}

alias countfiles='find . -type f | wc -l'
alias countdirs='find . -maxdepth 1 -type d | wc -l'

# list, move, copy, open latest modified file / dir in current dir
lst() {
    if [ $# -eq 0 ]
    then
        ls -t | head -1
    else
        ls -t | head -$1
    fi
}
mvl () {
    if [ $# -eq 1 ]
    then
        mv -i -v $(lst) $1
    else
        mv -i -v $(lst $1) $2
    fi
}
cpl () {
    if [ $# -eq 1 ]
    then
        cp -ir $(lst) $1
    else
        cp -ir $(lst $1) $2
    fi
}
ol () {
    open $(lst)
}

alias fori="for ((I=0;;I++)) do"

#====== Vim stuff
# wrapper for vim that allows to use previously captured keys by terminal like c-s for mappings
vim () {
    stty -ixon;
    command vim "$@";
    stty ixon;
}
vi () {
    stty -ixon;
    command vim "$@";
    stty ixon;
}

export VISUAL=vim
export EDITOR="$VISUAL"
alias evim="vim ~/.vimrc"
alias evimrc="vim ~/.vimrc"
alias viml="vim $(lst)"

ffv () {
    vim $(rg --hidden --files -g "*$1*")
}
ffrm () {
    rm $(rg --hidden --files -g "*$1*")
}
rgv () {
    vim $(rg -l "$1")
}
rgvim () {
    vim $(rg -l "$1")
}

# quickly edit aliases
als () {
    if [ $# -eq 0 ]
    then
        cat ~/bin/aliases
    else
        cat ~/bin/aliases | grep -i $1
    fi
}
if [ -f ~/bin/git_aliases ]; then
    . ~/bin/git_aliases
    alias egitals='vim ~/bin/git_aliases'

    gitals () {
        if [ $# -eq 0 ]
        then
            cat ~/bin/git_aliases
        else
            cat ~/bin/git_aliases | grep -i $1
        fi
    }
fi

# drive aliases
alias eals='vim ~/bin/aliases'
alias ebrc='vim ~/.bashrc'
alias ezrc='vim ~/.zshrc'


dragon-say () {
echo $1 | cowsay -e OO -f dragon-and-cow
}



#shopt -s globstar

#fasd init. Try different setups from "man fasd"
eval "$(fasd --init auto)"
alias v='f -e vim' # quick opening files with vim
c () {
    echo "copied $(f $@) to clipholder"
    f -e cat $@ | tr -d '\n' | xc
}

o () {
    echo "opening $(f $@)"
    f -e open $@ & disown
}


# documents
alias books='open https://docs.google.com/document/d/1Kz8ryAhjm8AHjcVO956MMFzlwhvrF84n0x21UVvmjA0/edit'
alias activities='open https://docs.google.com/document/d/1mKbc0Or2XXEoOD5FeBMuv4sDaxz_Gfh8pwBtoabJrfU/edit'
alias career='open https://docs.google.com/document/d/191BaYenDZRrsV5F8JS0t0LbSyWddEC1dGhrqj7DGfkk/edit'
alias friends='open https://docs.google.com/document/d/1MwawZDJWUjvCwoLIukIJlS-L3Czc9gCQTti04PZSLII/edit'
alias wishlist='open https://docs.google.com/document/d/1GapiFZZXzOXmDn1hb6Uy4f_jUxMTnPr3b2jAlHL06ag/edit'
alias hours='open https://docs.google.com/spreadsheets/d/1Z-3PQJbS1fUwjIs86l6sh5ffAfT7gtQz6pg7tfYzE2I/edit'

#ssh
alias nuc='ssh -X marand@marand.dk'
alias p10ssh='ssh rmp10@172.25.11.191'

# shell timers
countdown(){
    date1=$((`date +%s` + $1));
    while [ "$date1" -ge `date +%s` ]; do
        echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
        sleep 0.1
    done
}
stopwatch(){
    date1=`date +%s`;
    while true; do
        echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r";
        sleep 0.1
    done
}
alarm(){
    countdown $1 && open ~/bin/alarm.wav
}

# google search for string
gsearch() {
    if [ $# -eq 0 ]
    then
        echo "first arg must be search string"
    else
        google-chrome "https://www.google.com/search?q=$(echo $1 | tr ' ' '+')"
    fi
}

# start static file httpserver in current dir. Arg1: port
simpleserver(){
    python3 -m http.server $1
}

# replace space in file names with underscore
rename_space_underscore() {
    for arg in "$@"
    do
        mv "$arg" $(echo $arg | tr " " "_")
        echo $arg renamed to: $(echo $arg | tr " " "_")
    done
}

# replace space with underscore normal input
tr_underscore(){
    echo "$@" | tr " " "_"
}

alias scanlocal='sudo nmap -sn 192.168.87.0/24'

viewlog() {
    less +F ~/logs/$1
}

# Print Len of input
strlen() {
    strlenargs="$@"
    echo ${#strlenargs}
}


### Commentor
# run syn-replace on azure deploy files
synr () {
    ~/bin/syn-replace /c/Users/mar/source/Synoptik-Brilleabonnement/syn-gs/syn-gs-rg/azuredeploy.json
    ~/bin/syn-replace /c/Users/mar/source/Synoptik-Brilleabonnement/syn-gs/syn-gs-rg/azuredeploy-dk.json
}


alias rg='rg -M 400'

alias less='less +F' # real time update on file

# fzf scripts
if [ -f ./fzf-scripts.sh  ]; then
    source ./fzf-scripts.sh
fi


