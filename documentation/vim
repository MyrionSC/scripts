
" === Install vundle (in unix environment)
Run: git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
Launch vim and run :PluginInstall 


" saves all buffers and windows setup etc: :mksession! ~/today.ses
" Opens them again: vim -S ~/today.ses

" Execute command on file from commandline
" To execute on multiple files, find them via cli utility and use :read !<cmd> to get into vim
vim -c ":%s/syn_gs_api.Models/syn_gs_api.v1.Models/g | write | quit" <file>

" === Search Replace
" search replace with match
\0 is the whole match. To use only part of it you need to set it like this and use \1
.s/(\([0-9]*\))/{\1}/

" === plugins to try out
ctrlpvim/ctrlp.vim - to find file by name fuzzy search by its location or just its name
jlanzarotta/bufexplorer - to browse opened buffers (when you do not remember how many files you opened and modified recently and you do not remember where they are, probably because you searched for them with Ag)
rking/ag.vim to search the files with respect to gitignore
scrooloose/nerdtree to see the directory structure, lookaround, add/delete/modify files

" === run each line in vim buffer through sh command and back into vim
:%!xargs -n1 -I{} sh -c 'echo {} | base64 -d'
:%!xargs -L1 -I {} guestimate {} Investering\%karrierePlan\%text

" === perform command on multiple files
1: enter terminal command buffer (ctrl+x, ctrl+e)
2: find files to edit with "find" (:r !find . -name '*ts')
3: copy vim commands in front of each
example: vim -c 'g/public MOVE_SPEED/norm Opublic INITIAL_MOVE_SPEED = 0;' -c 'wq' file.txt
 	== OR ==
1: Open files in buffers
2: bufdo <COMMAND>

" === echo word under cursor
:echo expand("<cword>") " small word
:echo expand("<cWORD>") " big WORD

" === Variables
:let " See all defined variables
:echo <var> " eg echo g:os " show value of variable

" === print command at current cursor pos
:exe ":normal i" . <command>
eg :exe ":normal i" . stdpath('config')

" === Quickfix list
:copen " Open the quickfix window
:ccl   " Close it
:cw    " Open it if there are "errors", close it otherwise (some people prefer this)
:cn    " Go to the next error in the window
:cp    " Go to the previous error in the window
:cnf   " Go to the first error in the next file
:.cc   " Go to error under cursor (if cursor is in quickfix window)

" === Show hidden characters
:set list
:set listchars=tab:→\ ,space:·,nbsp:␣,trail:•,eol:¶,precedes:«,extends:»

" === see what features vim was compiled with
:version

