
" After changes, source .ideavimrc when changed: :source ~/.ideavimrc
" Full docs: https://github.com/JetBrains/ideavim/tree/master/doc
" action docs: https://github.com/JetBrains/ideavim#finding-actions
" list of supported commands: https://github.com/JetBrains/ideavim/wiki/set-commands

" Search for ideavim action with ":actionlist somecommand" or actionlist in terminal
" action can then be executed with ":action ACTION" or mapped with: nmap <leader>h <action>(ACTION) 
" track actions with action (search everything for it): IdeaVim: track action Ids
" can then be mapped with: nmap <leader>h <action>(PreviousTab)

" === Common settings
" docs: https://github.com/JetBrains/ideavim/wiki/%22set%22-commands
set clipboard+=unnamedplus
set idearefactormode=keep

" === ideavim plugin emulators
" docs: https://github.com/JetBrains/ideavim/wiki/Emulated-plugins
set surround
set commentary
set argtextobj
let g:argtextobj_pairs="[:],(:),<:>"
set highlightedyank
set NERDTree " Commands: https://github.com/JetBrains/ideavim/wiki/NERDTree-support
nnoremap <C-l> :NERDTreeFind<CR>

" === ideavim integrations
set ideajoin " see https://github.com/JetBrains/ideavim/wiki/%60ideajoin%60-examples
set idearefactormode=keep
set scrolloff=10 " minimum number of lines above and below the cursor


" === Mappings
let mapleader=" "
nnoremap <leader>r :action IdeaVim.ReloadVimRc.reload<CR>
nnoremap <leader>v :action VimActions<CR>
nmap <leader>h <action>(PreviousTab)
nmap <leader>l <action>(NextTab)
nmap <leader>i <action>(Generate)
nmap <leader>m <action>(Git.Menu)
nmap <leader>s <action>(QuickChangeScheme)
" TODO: open livetemplates for current language

noremap H ^
noremap L $
noremap c "_c
nnoremap d "_d
nnoremap D "_D
nnoremap dd "_dd
vnoremap p "0p
vnoremap P "0P
inoremap jk <ESC>
inoremap kj <ESC>

inoremap <C-k> {
inoremap <C-l> }
inoremap <C-i> (
inoremap <C-o> )

vnoremap ( "xdi()<ESC>"xP
vnoremap { "xdi{}<ESC>"xP
vnoremap [ "xdi[]<ESC>"xP
vnoremap " "xdi""<ESC>"xP
vnoremap ' "xdi''<ESC>"xP

" Search
set ignorecase smartcase " ignores case if all lowercase, does not if one or more uppercase. ignorecase must be set as well.
set incsearch hlsearch " search highlight while typing
nnoremap <silent> <leader> :nohlsearch<ENTER>
nmap æ /
nmap Æ ?
cnoremap æ <CR>

" IDE specific (see examples: https://github.com/JetBrains/ideavim#ide-specific-options)
if has('ide')
    if &ide =~? 'rider'
        nmap gcc :action CommentByLineComment<CR>
        vmap gc :action CommentByLineComment<CR>
    endif
endif

" === Set whether handler should be IDE og vim
" https://github.com/JetBrains/ideavim/blob/master/doc/sethandler.md
sethandler <C-A> a:vim
sethandler <C-B> a:ide
sethandler <C-D> a:vim
sethandler <C-E> a:ide
sethandler <C-F> a:ide
sethandler <C-H> a:ide
sethandler <C-I> n-v:ide i:vim
sethandler <C-J> n-v:ide i:vim
sethandler <C-K> n-v:ide i:vim
sethandler <C-L> n-v:vim i:vim
sethandler <C-M> n-v:ide i:vim
sethandler <C-O> n-v:ide i:vim
sethandler <C-P> a:ide
sethandler <C-Q> a:ide
sethandler <C-R> n:vim
sethandler <C-S> a:ide
sethandler <C-V> i:ide n-v:vim
sethandler <C-W> a:ide
sethandler <C-X> a:vim

