<templateSet group="JavaScript">
  <template name="cl" value="console.log($PARAMS$)$END$" description="console.log()" toReformat="false" toShortenFQNames="true">
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ce" value="console.error($PARAMS$)$END$" description="console.error()" toReformat="false" toShortenFQNames="true">
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="arf" value="($START$) =&gt; {&#10;    $END$&#10;}" description="arrow functions" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="desc" value="describe($START$, () =&gt; {&#10;    it($SHOULD_HAPPEN$, function() {&#10;        assert.equal($EXPECTED$, $END$);&#10;    });&#10;})" description="describe" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="SHOULD_HAPPEN" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="EXPECTED" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="prom" value="    .then((res) =&gt; {&#10;    $START$&#10;})&#10;.catch((err) =&gt; {&#10;    $END$&#10;})" description="promise components" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="itar" value="for (let $INDEX$ = 0; $INDEX$ &lt; $ARRAY$.length; $INDEX$++) {&#10;  let $VAR$ = $ARRAY$[$INDEX$];&#10;  $END$&#10;}" description="Iterate elements of array" toReformat="true" toShortenFQNames="true">
    <variable name="INDEX" expression="jsSuggestIndexName()" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="ARRAY" expression="jsArrayVariable()" defaultValue="&quot;array&quot;" alwaysStopAt="true" />
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;o&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="swi" value="switch ($START$) &#10;{ &#10;    case $CASE1$: &#10;      &#10;      break; &#10;    case $CASE2$: &#10;      &#10;      break;&#10;    default: &#10;      console.log(&quot;default case&quot;);&#10;} &#10;" description="switch" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CASE1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CASE2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>